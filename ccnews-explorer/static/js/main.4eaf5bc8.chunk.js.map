{"version":3,"sources":["QueryInput/QueryInput.js","TopicViewer/TopicViewer.js","App.js","serviceWorker.js","index.js"],"names":["QueryInput","props","state","outputText","handleTextChange","currentStr","keyStrokeSplit","keyStrokeIndex","length","keyStrokeTime","speedModifier","timerID","setTimeout","setState","cursorText","keyStrokeInfo","split","syncStart","currentTime","mode","browser","summaryLength","device","firstChange","totalTime","playing","this","startPlaying","clearTimeout","prevProps","prevState","snapshot","newKeyStrokeIndex","newKeyStrokeTime","modality","modalityDescription","modalityIconId","queryKey","icon","faHeadphones","faFont","browserDescription","browserIconId","faChrome","faEdge","faFirefox","faSafari","faOpera","deviceDescription","deviceIconId","faMobileAlt","faDesktop","faTabletAlt","summaryDescription","summaryIconId","className","Progress","value","max","id","UncontrolledTooltip","placement","target","faSearch","dangerouslySetInnerHTML","__html","Component","TopicViewer","handleCurrentTimeUpdate","maximumTime","autoPlay","nextTopic","qCount","topicId","showBackstories","backButtonText","getBackButtonText","showStats","showSpeedMenu","speedButtonText","getSpeedText","fetch","then","response","json","topicData","setInterval","clearInterval","stopPlaying","showingBackstories","faStop","faPlayCircle","currentTopic","Number","stopAutoplay","startAutoplay","event","undefined","checked","result","i","startingPoint","queries","numberOfQueries","queryInputs","keysUsed","maxTime","query","summary_modality","summary_length","includes","uid","push","typed_sequence","findKeyStrokeIndexOfFirstChange","computeTotalTime","key","wrappedInputs","Row","queriesSubmitted","topicTitle","topicSummaryShort","topicSummaryLong","meanQueryLength","uniqueQueryCount","uniqueWorkers","interleaveModalities","wrapQueryInputsInColumns","doc_title","doc_summary_short","doc_summary_long","mean_length","unique_queries","unique_workers","src","alt","href","onClick","togglePlayPause","bind","getPlayPauseIcon","restartTopic","faUndo","prevTopic","faStepBackward","type","maxLength","size","name","onChange","handleTopicChange","faStepForward","handleAutoplayChange","Col","handleQCountChange","ButtonDropdown","isOpen","toggle","toggleSpeedMenu","DropdownToggle","color","caret","DropdownMenu","DropdownItem","handleSpeedChange","handleSyncChange","Button","toggleBack","style","marginBottom","Collapse","CardDeck","Card","body","outline","CardTitle","tag","CardText","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4eaf5bc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { UncontrolledTooltip, Progress } from 'reactstrap';\n\nimport { faSearch, faHeadphones, faFont, faTabletAlt, faDesktop, faMobileAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { faChrome, faEdge, faFirefox, faSafari, faOpera} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport './QueryInput.css';\n\n\nclass QueryInput extends Component {\n    state = { \n        outputText: \"\",\n    }\n\n    componentDidMount() {\n        if (this.state.playing) {\n            this.startPlaying();\n        }\n    }\n\n    startPlaying() {\n        this.timerID = setTimeout(\n            () => this.handleTextChange(),\n            this.state.keyStrokeTime\n        )\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timerID);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        // Any time the current user changes,\n        // Reset any parts of state that are tied to that user.\n        // In this simple example, that's just the email.\n        if (props.syncStart !== state.syncStart || \n            props.currentTime !== state.currentTime ||\n            props.playing !== state.playing) {\n            return {\n                syncStart: props.syncStart,\n                currentTime: props.currentTime,\n                playing: props.playing\n            }\n        }\n\n        return null;\n    }\n    \n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.playing !== this.props.playing && !this.props.playing) {\n            clearTimeout(this.timerID);\n            return;\n        }\n\n        if ((prevProps.playing !== this.props.playing && this.props.playing) || \n            prevProps.currentTime > this.props.currentTime || \n            prevProps.syncStart !== this.props.syncStart) {\n            clearTimeout(this.timerID);\n            var newKeyStrokeIndex = this.props.firstChange;\n            var newKeyStrokeTime = this.state.keyStrokeSplit[newKeyStrokeIndex] * (1.0 / this.props.speedModifier);\n            this.setState({\n                keyStrokeIndex: newKeyStrokeIndex,\n                currentTime: this.props.currentTime,\n                keyStrokeTime: newKeyStrokeTime,\n                outputText: \"<span class=\\\"cursor\\\">|</span>\",\n                totalTime: this.props.totalTime,\n                speedModifier: this.props.speedModifier\n            });\n\n            this.timerID = setTimeout(\n                () => this.handleTextChange(),\n                newKeyStrokeTime\n            )\n        }\n    }\n\n    handleTextChange = () => {\n        var currentStr = this.state.keyStrokeSplit[this.state.keyStrokeIndex + 1];\n        if (this.state.keyStrokeIndex + 2 < this.state.keyStrokeSplit.length) {\n          this.state.keyStrokeIndex += 2;\n          this.state.keyStrokeTime = this.state.keyStrokeSplit[this.state.keyStrokeIndex] * (1.0 / this.state.speedModifier);\n        }\n\n        this.timerID = setTimeout(\n            () => this.handleTextChange(),\n            this.state.keyStrokeTime\n        )\n\n        return this.setState({\n            outputText : currentStr + this.state.cursorText, \n            //outputText : this.outputText.substring(0, rand) + this.cursorText + this.outputText.substring(rand),\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.keyStrokeSplit = this.props.keyStrokeInfo.split(\"|\");\n\n\n        this.state.syncStart = this.props.syncStart;\n        this.state.currentTime = this.props.currentTime;\n        this.state.mode = this.props.mode;\n        this.state.browser = this.props.browser;\n        this.state.summaryLength = this.props.summaryLength;\n        this.state.device = this.props.device;\n        this.state.keyStrokeIndex = this.props.firstChange; \n        this.state.totalTime = this.props.totalTime;\n        this.state.speedModifier = this.props.speedModifier;\n        this.state.keyStrokeTime = this.state.keyStrokeSplit[this.props.firstChange] * (1.0 / this.props.speedModifier);\n        this.state.cursorText = \"<span class=\\\"cursor\\\">|</span>\";\n        this.state.playing = this.props.playing;\n    }\n\n    render() { \n        var modality = (<p></p>);\n        var modalityDescription = \"Loading\"; \n        var modalityIconId = \"modalityIcon\" + this.props.queryKey;\n        if (this.state.mode == \"audio\") {\n            modality = (<FontAwesomeIcon icon={faHeadphones} />);\n            modalityDescription = \"Searcher listened to topic\";\n        } else if (this.state.mode == \"image\") {\n            modality = (<FontAwesomeIcon icon={faFont} />); \n            modalityDescription = \"Searcher read topic from image\";\n        }\n\n        var browser = (<p></p>);\n        var browserDescription = \"Loading\";\n        var browserIconId = \"browserIcon\" + this.props.queryKey;\n        if (this.state.browser == \"Chrome\" || \n            this.state.browser == \"Chrome Mobile\" ||\n            this.state.browser == \"Chrome Mobile iOS\" ||\n            this.state.browser == \"Chromium\") {\n            browser = (<FontAwesomeIcon icon={faChrome} />);\n            browserDescription = \"Searcher used Google Chrome Browser\";\n        } else if (this.state.browser == \"Edge\") {\n            browser = (<FontAwesomeIcon icon={faEdge} />);\n            browserDescription = \"Searcher used Microsoft Edge Browser\";\n        } else if (this.state.browser == \"Firefox\") {\n            browser = (<FontAwesomeIcon icon={faFirefox} />);\n            browserDescription = \"Searcher used Mozilla Firefox Browser\";\n        } else if (this.state.browser == \"Safari\" || \n            this.state.browser == \"Mobile Safari\") {\n            browserDescription = \"Searcher used Safari Browser\";\n            browser = (<FontAwesomeIcon icon={faSafari} />);\n        } else if (this.state.browser == \"Opera\") {\n            browser = (<FontAwesomeIcon icon={faOpera} />); \n            browserDescription = \"Searcher used Opera Browser\";\n        }\n\n        var device = (<p></p>);\n        var deviceDescription = \"Loading\";\n        var deviceIconId = \"deviceIcon\" + this.props.queryKey;\n        if (this.state.device == \"Mobile\") {\n            device = (<FontAwesomeIcon icon={faMobileAlt} />);\n            deviceDescription = \"Searcher was using a mobile phone\";\n        } else if (this.state.device == \"PC\") {\n            device = (<FontAwesomeIcon icon={faDesktop} />); \n            deviceDescription = \"Searcher was using a desktop computer\";\n        } else if (this.state.device == \"Tablet\") {\n            device = (<FontAwesomeIcon icon={faTabletAlt} />); \n            deviceDescription = \"Searcher was using a tablet\";\n        }\n\n        var summaryLength = (<p></p>);\n        var summaryDescription = \"Loading\";\n        var summaryIconId = \"summaryIcon\" + this.props.queryKey;\n        if (this.state.summaryLength == \"long\") {\n            summaryLength = (<span>L</span>);\n            summaryDescription = \"Searcher was given a long backstory\";\n        } else if (this.state.summaryLength == \"short\") {\n            summaryLength = (<span>S</span>);\n            summaryDescription = \"Searcher was given a short backstory\";\n        } else if (this.state.summaryLength == \"title\") {\n            summaryLength = (<span>T</span>);\n            summaryDescription = \"Searcher was given a title backstory\";\n        }\n\n\n        return ( \n            <div className=\"queryContainer\">\n                <div className=\"queryMeta\">\n                    <span className=\"textInnerBox\">\n                        <Progress className=\"queryProgressBar\" value={this.state.currentTime} max={this.state.totalTime} />\n                        <span id={modalityIconId} className=\"searchMetaIcon\">{modality}</span> \n                        <span id={browserIconId} className=\"searchMetaIcon\">{browser}</span> \n                        <span id={deviceIconId} className=\"searchMetaIcon\">{device}</span> \n                        <span id={summaryIconId} className=\"searchMetaIcon\">{summaryLength}</span>\n                        <UncontrolledTooltip placement=\"left\" target={modalityIconId}>\n                            {modalityDescription}\n                        </UncontrolledTooltip>\n                        <UncontrolledTooltip placement=\"left\" target={browserIconId}>\n                            {browserDescription}\n                        </UncontrolledTooltip>\n                        <UncontrolledTooltip placement=\"left\" target={deviceIconId}>\n                            {deviceDescription}\n                        </UncontrolledTooltip>\n                        <UncontrolledTooltip placement=\"left\" target={summaryIconId}>\n                            {summaryDescription}\n                        </UncontrolledTooltip>\n                    </span>\n                    <FontAwesomeIcon className=\"searchIcon\" icon={faSearch} />\n                </div>\n\n                <div className=\"queryBoxContainer\">\n                    <div className=\"queryBox\">\n                        <span className=\"textInnerBox\">\n                            <span dangerouslySetInnerHTML={{ __html: this.state.outputText }} />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default QueryInput;","import React, { Component, useState } from 'react';\nimport QueryInput from '../QueryInput/QueryInput';\nimport { Progress, Row, Col, Button, ButtonDropdown, Card, CardTitle, CardText, CardDeck, Collapse, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport { faUndo, faStepForward, faStepBackward, faStop} from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport './TopicViewer.css';\n\nclass TopicViewer extends Component {\n\n    componentDidMount() {\n        fetch('./joined/' + this.state.topicId + '.json')\n            .then(response => response.json())\n            .then(topicData => this.setState({ topicData }));\n    }\n\n    startPlaying() {\n        this.timerID = setInterval(\n            () => this.handleCurrentTimeUpdate(),\n            1000\n        )\n\n        this.setState({ playing: true, currentTime: 0});\n    }\n\n    stopPlaying() {\n        clearInterval(this.timerID);\n\n        this.setState( {playing: false} );\n    }\n\n    startAutoplay() {\n        this.setState( {autoPlay: true} );\n        this.startPlaying();\n    }\n\n    stopAutoplay() {\n        this.setState( {autoPlay: false} );\n    }\n\n    componentWillUnmount() {\n        this.stopPlaying();\n    }\n\n    handleCurrentTimeUpdate = () => {\n        var currentTime = this.state.currentTime;\n        if (currentTime == null) {\n            this.setState( {currentTime: 0} );\n        }\n        else {\n            this.setState( {currentTime: currentTime + 1000} );\n\n            if (currentTime > this.state.maximumTime + 5000 && this.state.autoPlay) {\n                this.nextTopic();\n            }\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            qCount: 10, \n            speedModifier: 1.0, \n            topicId: this.props.topicId, \n            syncStart: false, \n            showBackstories: true, \n            backButtonText: this.getBackButtonText(true), \n            showStats: false,\n            maximumTime: 0,\n            playing: false,\n            showSpeedMenu: false,\n            speedButtonText: this.getSpeedText(1.0),\n            autoPlay: true\n         }\n    }\n\n    getBackButtonText(showingBackstories) {\n        if (showingBackstories)\n            return \"Hide Backstories\";\n        return \"Show Backstories\";\n    }\n\n    getSpeedText(speedModifier) {\n      return \"Speed: \" + speedModifier + \"X\";\n    }\n\n    getPlayPauseIcon() {\n        if (this.state.playing) {\n            return <FontAwesomeIcon className=\"playbackIcon\" icon={faStop} />;\n        }\n        return <FontAwesomeIcon className=\"playbackIcon\" icon={faPlayCircle} />;\n    }\n\n    nextTopic() {\n        var currentTopic = this.state.topicId;\n        var nextTopic = Number(currentTopic) + 1;\n        if (nextTopic == 174) {\n            nextTopic = 1;\n        }\n        this.setState({ topicData: null, topicId: nextTopic, currentTime: 0});\n\n        fetch('./joined/' + nextTopic + '.json')\n            .then(response => response.json())\n            .then(topicData => this.setState({ topicData }));\n    }\n\n    restartTopic() {\n        this.stopPlaying();\n        this.startPlaying();\n    }\n\n    prevTopic() {\n        var currentTopic = this.state.topicId;\n        var nextTopic = Number(currentTopic) - 1;\n        if (nextTopic == 0) {\n            nextTopic = 173;\n        }\n        this.setState({ topicData: null, topicId: nextTopic, currentTime: 0});\n\n        fetch('./joined/' + nextTopic + '.json')\n            .then(response => response.json())\n            .then(topicData => this.setState({ topicData }));\n    }\n\n    toggleSpeedMenu() {\n      this.setState({ showSpeedMenu: !this.state.showSpeedMenu });\n    }\n\n    toggleBack() {\n       this.setState({ showBackstories: !this.state.showBackstories , backButtonText : this.getBackButtonText(!this.state.showBackstories)});\n    }\n\n    togglePlayPause() {\n        if (!this.state.playing) {\n            this.startPlaying();\n        }\n        else {\n            this.stopPlaying();\n        }\n    }\n\n    toggleAutoMode() {\n        if (!this.state.autoPlay) {\n            this.startAutoplay();\n        }\n        else {\n            this.stopAutoplay();\n        }\n    }\n\n    handleTopicChange(event) {\n        this.setState({ topicData: null, topicId: event.target.value, currentTime: 0});\n\n        if (event.target.value != undefined && event.target.value > 0) {\n            fetch('./joined/' + event.target.value + '.json')\n                .then(response => response.json())\n                .then(topicData => this.setState({ topicData }));\n        }\n    }\n\n    handleQCountChange(event) {\n        if (this.state.playing) {\n            this.stopPlaying();\n            this.setState({qCount: event.target.value, currentTime: 0})\n            this.startPlaying();\n        }\n        else {\n            this.setState({qCount: event.target.value});\n        }\n    }\n\n    handleSpeedChange(event) {\n        if (this.state.playing) {\n            this.stopPlaying();\n            this.setState({speedModifier: event.target.value, currentTime: 0})\n            this.startPlaying();\n        }\n        else {\n            this.setState({speedModifier: event.target.value});\n        }\n       this.setState({speedButtonText: this.getSpeedText(event.target.value)});\n    }\n\n    handleAutoplayChange(event) {\n        this.setState({autoPlay: event.target.checked});\n    }\n\n    handleSyncChange(event) {\n        clearInterval(this.timerID);\n\n        this.timerID = setInterval(\n            () => this.handleCurrentTimeUpdate(),\n            1000\n        )\n\n        this.setState({syncStart: event.target.checked, currentTime: 0});\n    }\n\n    findKeyStrokeIndexOfFirstChange(keyStrokeSplit) {\n        var result = this.state.syncStart ? 4 : 0;\n        if (this.state.syncStart) {\n            for (var i = result; i < keyStrokeSplit.length; i++) {\n                if (i % 2 != 0) {\n                    if (keyStrokeSplit[i] != \"\") {\n                        return i - 1;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    computeTotalTime(startingPoint, keyStrokeSplit) {\n        var totalTime = 0;\n        for (var i = startingPoint; i < keyStrokeSplit.length; i++) {\n            if (i % 2 == 0) {\n                totalTime += Number(keyStrokeSplit[i]) * (1.0/this.state.speedModifier);\n            }\n        }\n        return totalTime;\n    }\n\n    interleaveModalities(queries, numberOfQueries, currentTime) {\n        var queryInputs = [];\n        var keysUsed = [];\n        var maxTime = 0;\n\n        if (numberOfQueries > queries.length) {\n            numberOfQueries = queries.length;\n        }\n\n        while(queryInputs.length < numberOfQueries) {\n            for (var mode of [\"image\", \"audio\"]) {\n                for (var summaryLength of [\"title\", \"short\", \"long\"]) {\n                    for (var i = 0; i < queries.length; i++) {\n                        var query = queries[i];\n                        if (query.summary_modality == mode &&\n                            query.summary_length == summaryLength &&\n                            !keysUsed.includes(query.uid)) {\n\n                            keysUsed.push(query.uid);\n\n                            var keyStrokeSplit = query.typed_sequence.split(\"|\");\n                            var newKeyStrokeIndex = this.findKeyStrokeIndexOfFirstChange(keyStrokeSplit);\n                            var totalTime = this.computeTotalTime(newKeyStrokeIndex, keyStrokeSplit);\n\n                            if (totalTime > maxTime) {\n                                maxTime = totalTime;\n                            }\n\n                            queryInputs.push(\n                                <QueryInput key={query.uid} \n                                    queryKey={query.uid}\n                                    syncStart={this.state.syncStart}\n                                    currentTime={currentTime}\n                                    mode={query.summary_modality} \n                                    summaryLength={query.summary_length}\n                                    device={query.device}\n                                    browser={query.browser} \n                                    keyStrokeInfo={query.typed_sequence}\n                                    firstChange={newKeyStrokeIndex}\n                                    totalTime={totalTime} \n                                    speedModifier={this.state.speedModifier}\n                                    playing={this.state.playing} />\n                            );\n                            break;\n                        }\n                    }\n\n                    if (queryInputs.length == numberOfQueries) {\n                        this.state.maximumTime = maxTime;\n                        return queryInputs;\n                    } \n                }\n            }\n        }\n\n        this.state.maximumTime = maxTime;\n        return queryInputs;\n    }\n\n    wrapQueryInputsInColumns(queryInputs) {\n        var wrappedInputs = [];\n        for (var i = 0; i < queryInputs.length; i+=2) {\n            wrappedInputs.push(\n                <Row key={i} className=\"queryRow\">\n                    <div className=\"col-sm-12 col-sm-pull-12 col-md-6 col-md-pull-6\">\n                        {queryInputs[i]}\n                    </div>\n                    <div className=\"col-sm-12 col-sm-pull-12 col-md-6 col-md-pull-6\">\n                        {queryInputs[i+1]}\n                    </div>\n                </Row>\n            )\n        }\n        return wrappedInputs;\n    }\n\n    render() { \n        var queryInputs = (<p>Loading</p>); \n        var queriesSubmitted = (<p>Loading</p>);\n        var topicTitle = (<p>Loading</p>);\n        var topicSummaryShort = (<p>Loading</p>);\n        var topicSummaryLong = (<p>Loading</p>);\n        var meanQueryLength = (<p>Loading</p>);\n        var uniqueQueryCount = (<p>Loading</p>);\n        var uniqueWorkers = (<p>Loading</p>);\n\n        if (this.state.topicData != undefined) {\n            queryInputs = this.interleaveModalities(this.state.topicData.queries, this.state.qCount, this.state.currentTime);\n            queryInputs = this.wrapQueryInputsInColumns(queryInputs);\n            queriesSubmitted = this.state.topicData.queries.length;\n            topicTitle = this.state.topicData.doc_title; \n            topicSummaryShort = this.state.topicData.doc_summary_short;\n            topicSummaryLong = this.state.topicData.doc_summary_long;\n            meanQueryLength = this.state.topicData.mean_length;\n            uniqueQueryCount = this.state.topicData.unique_queries;\n            uniqueWorkers = this.state.topicData.unique_workers;\n        }\n\n      return (\n            <div>\n                <div className=\"topicInfoContainer\">\n                    <Row>\n                        <div className=\"col-sm-3 col-sm-pull-0 col-md-3 col-md-pull-3\">\n                            <img src=\"cc.png\" className=\"logo\" alt=\"CC News Query Explorer\"/>\n                        </div>\n                        <div className=\"col-sm-6 col-sm-pull-0 col-md-6 col-md-pull-6\">\n                            <Row className=\"topicProgressRow topicControls\">\n                                <div className=\"col-xs-3 mx-auto\">\n                                    <a href=\"#\" onClick={this.togglePlayPause.bind(this)}>{this.getPlayPauseIcon()}</a>\n                                    <a href=\"#\" onClick={this.restartTopic.bind(this)}><FontAwesomeIcon className=\"playbackSolidIcon\" icon={faUndo} /></a>\n                                </div>\n                                <div className=\"topicProgressCol col-xs-9 mx-auto\">\n                                    <a href=\"#\" onClick={this.prevTopic.bind(this)}><FontAwesomeIcon className=\"forwardBackSolidIcon\" icon={faStepBackward}/></a>\n                                    <b>Topic</b>: \n                                        <input type=\"text\" \n                                               maxLength=\"3\" \n                                               size=\"3\" \n                                               name=\"topic\" \n                                               value={this.state.topicId} \n                                               onChange={this.handleTopicChange.bind(this)} />\n                                    &nbsp;of 173&nbsp;\n                                    <a href=\"#\" onClick={this.nextTopic.bind(this)}><FontAwesomeIcon className=\"forwardBackSolidIcon\" icon={faStepForward}/></a>\n                                    <b>Auto</b>: <input type=\"checkbox\" name=\"autoPlay\" checked={this.state.autoPlay} onChange={this.handleAutoplayChange.bind(this)} />&nbsp;\n                                </div>\n                            </Row>\n                            <Row className=\"topicProgressRow\">\n                                <Col className=\"topicProgressCol\">\n                                    <Progress className=\"progressBar\" value={this.state.currentTime} max={this.state.maximumTime} />\n                                </Col>\n                            </Row>\n                        </div>\n                        <div className=\"col-sm-12 col-sm-pull-0 col-md-3 col-md-pull-3\">\n                            <Row>\n                                <Col>\n                                    <b>Queries</b>: &nbsp;<input type=\"text\" maxLength=\"3\" size=\"3\" name=\"qCount\" value={this.state.qCount} onChange={this.handleQCountChange.bind(this)} /><br></br>\n                                    <br/>\n                                    <ButtonDropdown isOpen={this.state.showSpeedMenu} toggle={this.toggleSpeedMenu.bind(this)}>\n                                      <DropdownToggle color=\"info\" caret>\n                                        {this.state.speedButtonText}\n                                      </DropdownToggle>\n                                      <DropdownMenu>\n                                      <DropdownItem value={0.2} onClick={this.handleSpeedChange.bind(this)}>0.2</DropdownItem>\n                                      <DropdownItem value={0.5} onClick={this.handleSpeedChange.bind(this)}>0.5</DropdownItem>\n                                      <DropdownItem value={1.0} onClick={this.handleSpeedChange.bind(this)}>1.0</DropdownItem>\n                                      <DropdownItem value={2.0} onClick={this.handleSpeedChange.bind(this)}>2.0</DropdownItem>\n                                      <DropdownItem value={5.0} onClick={this.handleSpeedChange.bind(this)}>5.0</DropdownItem>\n                                      </DropdownMenu>\n                                    </ButtonDropdown>\n                                </Col>\n                                <Col><b>Sync Start Times</b>: <input type=\"checkbox\" name=\"syncStart\" checked={this.state.syncStart} onChange={this.handleSyncChange.bind(this)} />&nbsp;</Col>\n                                <Col><Button color=\"info\" onClick={this.toggleBack.bind(this)} style={{ marginBottom: '1rem' }}>{this.state.backButtonText}</Button></Col>\n                            </Row>\n                            { /* <Button color=\"info\" onClick={this.toggleStats.bind(this)} style={{ marginBottom: '1rem' }}>{this.state.statsButtonText}</Button> */ }\n                        </div>\n                    </Row>\n                    <Row>\n                        <Col className=\"statsColumn\">\n                            <b>Queries Submitted</b>: {queriesSubmitted}<br></br>\n                        </Col>\n                        <Col className=\"statsColumn\">\n                            <b>Mean Word Count</b>: {meanQueryLength}<br></br>\n                        </Col>\n                        <Col className=\"statsColumn\">\n                            <b>Unique Query Count</b>: {uniqueQueryCount}<br></br>\n                        </Col>\n                        <Col className=\"statsColumn\">\n                            <b>Unique Workers</b>: {uniqueWorkers}\n                        </Col>\n                    </Row>\n\n                 <Collapse isOpen={this.state.showBackstories}>\n                    <br></br>\n                    <CardDeck>\n                        <Card body outline color=\"info\">\n                          <CardTitle className=\"text-center\" tag=\"h4\">Title</CardTitle>\n                          <CardText>{topicTitle}</CardText>\n                        </Card>\n                        <Card body outline color=\"info\">\n                          <CardTitle className=\"text-center\" tag=\"h4\">Short Summary</CardTitle>\n                          <CardText>{topicSummaryShort}</CardText>\n                        </Card>\n                        <Card body outline color=\"info\">\n                          <CardTitle className=\"text-center\" tag=\"h4\">Long Summary</CardTitle>\n                          <CardText>{topicSummaryLong}</CardText>\n                        </Card>\n                    </CardDeck>\n                </Collapse>\n              </div>\n              <div>\n                    { queryInputs }\n              </div>\n            </div>\n        );\n    }\n}\n \nexport default TopicViewer;\n","import React from 'react';\nimport './App.css';\nimport TopicViewer from './TopicViewer/TopicViewer';\n\n\nfunction App() {\n  return (\n    <div>\n      <TopicViewer topicId=\"1\" />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}